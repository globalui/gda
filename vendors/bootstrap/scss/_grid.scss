// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
  // Single container class with breakpoint max-widths
  .container {
    @include make-container();
    @include make-container-max-widths();
  }

  // 100% wide container at all breakpoints
  .container-fluid {
    @include make-container();
  }

  // Responsive containers that are 100% wide until a breakpoint
  @each $breakpoint, $container-max-width in $container-max-widths {
    .container-#{$breakpoint} {
      @extend .container-fluid;
    }

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      %responsive-container-#{$breakpoint} {
        max-width: $container-max-width;
      }

      // Extend each breakpoint which is smaller or equal to the current breakpoint
      $extend-breakpoint: true;

      @each $name, $width in $grid-breakpoints {
        @if ($extend-breakpoint) {
          .container#{breakpoint-infix($name, $grid-breakpoints)} {
            @extend %responsive-container-#{$breakpoint};
          }

          // Once the current breakpoint is reached, stop extending
          @if ($breakpoint == $name) {
            $extend-breakpoint: false;
          }
        }
      }
    }
  }
}


// Row
//
// Rows contain your columns.

@if $enable-grid-classes {
  .row {
    @include make-row();
  }

  // Remove the negative margin from default .row, then the horizontal padding
  // from all immediate children columns (to prevent runaway style inheritance).
  .no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
  @include make-grid-columns();
}


//grid loop
$slag-name:d-grid !default;
$slag-radius:radius !default;
$gap:1rem !default;
$radiusValue:0.2 !default;

$breakPoint:(sm:300px,md:768px, lg:992px, xl:1200px, xxl:1400px);
@each $breaker,$breakerNum in $breakPoint{
  @media (min-width:$breakerNum) {
    @for $i from 1 through 12{
      .#{$slag-name}-#{$breaker}-#{$i}{
        grid-template-columns: repeat($i,1fr);
      }
      .#{$slag-radius}-#{$breaker}-#{$i}{
        border-radius:#{0.2 + $radiusValue}rem !important;
      }
    }
  }
}

.d-grid{
  display: grid !important;
  line-height:$gap;
}
.d-grid-gap-1{
  grid-column-gap:$gap;
  grid-row-gap:$gap;
} 
.d-grid-gap-2{
  grid-column-gap:30px;
  grid-row-gap:30px;
}
